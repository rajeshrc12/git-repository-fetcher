import React from 'react'
import "./git-user-details.css";
import { HiLocationMarker } from "react-icons/hi";
import { FiLink2 } from "react-icons/fi";
const GitUserDetails = (props) => {
    return (
        <div className="git_user_details_container">
            <div className="git_user_image">
                <img src={props.gituser.avatar_url} alt="" />
            </div>
            <div className="git_user_data">
                <div className="git_user_fullname">
                    {props.gituser.name}
                </div>
                <div className="git_user_bio" style={{display:props.gituser.bio?"block":"none"}}>
                    {props.gituser.bio}
                </div>
                <div className="git_user_location" style={{display:props.gituser.location?"block":"none"}}>
                    <HiLocationMarker size={15} />
                    {props.gituser.location}
                </div>
                <div className="git_user_twitter" style={{display:props.gituser.twitter_username?"block":"none"}}>
                Twitter:<a target="_blank" rel="noreferrer" href={`https://twitter.com/${props.gituser.twitter_username}`}>{`https://twitter.com/${props.gituser.twitter_username}`}</a>
                </div>
            </div>
            <div className="git_user_link">
                <div>
                <FiLink2 />
                </div>
                <div>
                <a target="_blank" rel="noreferrer" href={props.gituser.html_url} >{props.gituser.html_url}</a>
                </div>
            </div>
            
        </div>
    )
}

export default GitUserDetails


import React, { useEffect, useState } from 'react'
import "./git-user-info.css";
import ReactPaginate from 'react-paginate';
import GitUserDetails from '../git-user-details/GitUserDetails';
import Swal from 'sweetalert2';
import GitUserRepos from '../git-user-repos/GitUserRepos';
const GitUserInfo = () => {
  const [user, setUser] = useState(sessionStorage.getItem("username"));
  const [userDetails, setUserDetails] = useState([]);
  const [gitRepos, setGitRepos] = useState([]);
  useEffect(() => {
    Swal.fire('Fetching Please Wait!');
    Swal.showLoading();
    fetch(`https://api.github.com/users/${user}`)
      .then(req => req.json())
      .then(res => {
        setUserDetails(res);
        Swal.hideLoading();
        Swal.fire('All Repository Loaded');
      });
    fetch(`https://api.github.com/users/${user}/repos?per_page=9&page=1`)
      .then(req => req.json())
      .then(res => {
        setGitRepos(res);
        Swal.hideLoading();
        Swal.fire('All Repository Loaded');
      });
  }, [user]);
  const handlePageClick = (e) =>{
    console.log(e);
  }
  return (
    <div className="git_user_info_container">
      <GitUserDetails gituser={userDetails} />
      <GitUserRepos gitrepos={gitRepos} />
      <ReactPaginate
        nextLabel=">>"
        previousLabel="<<"
        className='pagination'
        pageClassName="pagination_buttons"
        previousClassName="pagination_buttons"
        nextClassName="pagination_buttons"
        onPageChange={handlePageClick}
        pageCount={10}
        breakClassName="pagination_buttons"
      />
    </div>
  )
}

export default GitUserInfo


import React from 'react'
import "./git-user-repos.css";
const GitUserRepos = (props) => {
    console.log("repos", props.gitrepos)
    return (
        <div className="git_user_repos_container">
            {
                props.gitrepos.map((e,i) => {
                    return (
                        <div key={i} className="git_user_repos_card">
                            <div className="repo_title">
                               <a className='link' target="_blank" rel="noreferrer" href={e.html_url}>{e.name}</a> 
                            </div>
                            <div className="repo_details">
                            {e.description?e.description.slice(0,50)+"...":"No Description"}
                            </div>
                            <div className="repo_lang">
                                <div className="repo_lang_btn">
                                {e.language?e.language:"No Language Found"}
                                </div>
                            </div>
                        </div>
                    );
                })
            }

        </div>
    )
}

export default GitUserRepos